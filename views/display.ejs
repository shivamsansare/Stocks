<html>
    <head>
        <title>
            Stocks
        </title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.js"> </script> 
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <style>
            table,th,td,hr,input{
            border: 1px solid black;
            border-collapse: collapse;
          }
          thead{
            border: 2px solid black;
            border-collapse: collapse;
          }
          th,td{
              padding:10px;
          }
          table{
              margin-left:15px;
              margin-bottom:15px;
          }
          
          a { 
            color: inherit; 
        } 

        </style>
    </head>
    <body onload="calculate(<%=JSON.stringify(price)%>)">
        <br id="center">
        <center>
            <div class="row container form-inline">
                <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
                <a href="/" class="button btn btn-primary">Back</a>
                <hr>
                <div class="row">
                    <div class="col-md-6">
                        
                    </div>
                    <div class="col-md-2">
                        <a href="/api">
                            <button class="btn btn-primary">
                                Api
                            </button>
                        </a>    
                    </div>
                    <div class="col-md-2">
                        
                    </div>
                    <div class="col-md-2">
                        <a href="#br">
                            <button class="btn btn-warning" onclick="table()">
                                Table
                            </button>
                        </a>
                    </div>
            
                </div>                    
            </div>
            <br>
            <input type="number" id="number" name="number" placeholder="Group by" required>
            <a href="#myChartm">
                <button class="btn btn-success" onclick="myGraph(<%=JSON.stringify(price)%>)">
                    MyGraph
                </button>
            </a>
            <br>
            <br>
                <input type="text" id="company" name="company" placeholder="Company" required>
                <input type="number" id="g1" name="g1" placeholder="Group by" required>
                <input type="number" id="g2" name="g2" placeholder="Group by" required>
                <input type="number" id="g3" name="g3" placeholder="Group by" required>
                <input type="number" id="g4" name="g4" placeholder="Group by" required>
                <a href="#myCharts">
                    <button class="btn btn-danger" onclick="combined(<%=JSON.stringify(price)%>)">
                    Combined
                    </button>
                </a>
        </center>
      
     
        <br>
        <br>
        <div>
            <canvas id="myChart" width="900" height="400"></canvas> 

        </div>
        
        <br>
        <br>
        
        <div id="hr1">
            <hr> 
            <br>
            <div class="row">
                <div class="col-md-11">

                </div>
                <div class="container col-md-1 form-inline">
                    <br>
                    <a href="#center">
                        <button class="btn btn-danger form-control ml-auto" onclick="cancelGraph1()">
                            X
                        </button>
                    </a>
                        
                </div>
            </div>
            
            <br>
            <canvas id="myCharts" width="900" height="400"></canvas> 
            <br>
            <br>
        </div>

        <div id="hr2">
            <hr> 
            <br>
            <div class="row">
                <div class="col-md-11">

                </div>
                <div class="container col-md-1 form-inline">
                    <br>
                    <a href="#center">
                        <button class="btn btn-danger form-control ml-auto" onclick="cancelGraph2()">
                            X
                        </button>
                    </a>
                </div>
            </div>
            
            <br>
            <canvas id="myChartm" width="900" height="400"></canvas> 
            <br>
            <br>
        </div>
       
        <hr id="hr3">
        <br>
        <br id="br">
        <div class="row container" id="search-div">
            <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
            <input id="search" class="form-control ml-auto" type="text" name="search" placeholder="&#xF002; Search" style="width:30%;font-family:Arial, FontAwesome" onkeyup="search()">                   
            <a href="#center">
                <button class="btn btn-danger" onclick="undoTable()">
                    X
                </button>
            </a>
        </div>
        <br>
        <div class="row">
            <div class="col-md-1 col-sm-2">
                
            </div>
            <div class="col-md-4 col-sm-8">
                <table id="searching">
                    <thead>
                        <tr>
                            <td>
                                Date
                            </td>
                            <td>
                                Price
                            </td>
                            <td>
                                Company
                            </td>
                        </tr>
                    </thead>
                    <% price.forEach(function(item){ %>
                        <% var inter=new Date(item.date); %>
                        <% inter.setDate(inter.getDate()+1) %>
                        <%  var internext=inter.toDateString(); %>
                        <% internext=internext.split("G"); %>
                        <% var realDate=internext[0]; %>
                        <tr>
                            <td>
                                <%= item.date %>
                            </td>
                            <td>
                                <%= item.price %>
                            </td>
                            <td>
                                <%= item.company %>
                            </td>
                        </tr>
                    <% }) %>
                </table>
            </div>
        </div>

        <br>
        <br>
        <br>

    </body>
    <script type="text/javascript"> 

    function table(){
        $("#searching").show();
        $("#search-div").show();
        $("#hr3").show();
    }

    function undoTable(){
        $("#searching").hide();
        $("#search-div").hide();
        $("#hr3").hide();
    }

    function cancelGraph1(){
        $("#hr1").hide();
    }

    function cancelGraph2(){
        $("#hr2").hide();
    }

    function calculate(price){
        $("#myChartm").hide();
        $("#myCharts").hide();
        $("#searching").hide();
        $("#search-div").hide();
        $("#hr1").hide();
        $("#hr2").hide();
        $("#hr3").hide();
        var ctx = document.getElementById("myChart"); 
        var i=1;
        var lab=[];
        var datas=[];
        var company=[];
        var companydate=[];
        var companyprice=[];
        price.forEach(function(item){
            company[i]=item.company;
            // compdate=new Date(item.date);
            // console.log(compdate);
            companydate[i]=item.date;
            companyprice[i]=item.price;
            i=i+1;
        });
        i=1;
        //console.log(company);

        var datasets=[]

        var eachLabel=[];

        lab=[];
        var m=1;
        for(i=1;i<=companydate.length;i++){
            if(lab.includes(companydate[i])){

            }
            else{
                lab[m]=companydate[i];
                m=m+1;
            }
        }
        lab.sort();
        //console.log(lab);

        var k=0;
        var colors=["red","blue","green","purple","black","brown","orange","#ff002b","#000066","#003300","#003366"];
        for(i=1;i<company.length;i=i+1){
            if((company[i]!=company[i+1]) ){
                datas[lab.indexOf(companydate[i])]=companyprice[i];
                var dataFirst = {
                    label: ""+company[i],
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
                if(k==colors.length){
                    k=0;
                }
                else{
                    k=k+1;
                }
                datasets.push(dataFirst);
                datas=[];
            }
            else{
                datas[lab.indexOf(companydate[i])]=companyprice[i];
            }
        }

        if(company[company.length] == company[company.length-1]){
            datas[companydate[company.length]]=companyprice[company.length];
            if(k==colors.length){
                    k=0;
                }
                else{
                    k=k+1;
                }
                var dataFirst = {
                    label: ""+company[company.length],
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
                datasets.push(dataFirst);
                datas=[];
        }
       
        else{
            
        }

        //console.log(datasets);
        var realDate=[];
        for(i=0;i<lab.length-1;i++){
            var inter=new Date(lab[i]);
            var internext=inter.toDateString();
            internext=internext.split("G");
            realDate[i]=internext;
        }
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: 
            { 
                    labels: realDate, 
                    datasets: datasets
            }, 
            options: {
                scaleShowValues: true,
                scales: {
                    xAxes: [{
                    ticks: {
                        autoSkip: true,
                    }
                    }]
                }
}
        });
        //console.log(myLineChart);
    }

    function myGraph(price){
        $("#myChartm").show();
        $("#hr2").show();
        var input=parseInt(document.getElementById("number").value);
        //console.log(input);
        alert("Displaying Requested graph for "+input+" days")
        
        var ctxm = document.getElementById("myChartm"); 
        var i=1;
        var lab=[];
        var datas=[];
        var company=[];
        var companydate=[];
        var companyprice=[];
        price.forEach(function(item){
            company[i]=item.company;
            companydate[i]=item.date;
            companyprice[i]=item.price;
            i=i+1;
        });
        i=1;
        //console.log(company);

        var datasets=[]

        var eachLabel=[];

        lab=[];
        var m=1;
        for(i=1;i<=companydate.length;i++){
            if(lab.includes(companydate[i])){

            }
            else{
                lab[m]=companydate[i];
                m=m+1;
            }
        }
        lab.sort();
        //console.log(lab);

        var k=0;
        var colors=["red","blue","green","purple","black","brown","orange","#ff002b","#000066","#003300","#003366"];
        for(i=1;i<company.length;i=i+1){
            if((company[i]!=company[i+1]) ){
                datas[lab.indexOf(companydate[i])]=companyprice[i];
                //console.log(datas);
                //console.log("hello");
                var inp=input-1;
                var sum=0;
                var dataExtras=[];
                var m=0;
                while(datas[m]==null){
                    m=m+1;
                }
                for(var p=m;p<datas.length;p=p+1){
                    sum=sum+datas[parseInt(p)];
                    if(parseInt(p-m)>=parseInt(inp)){
                        dataExtras[parseInt(p)]=sum/parseInt(input);
                        sum=sum-datas[parseInt(p)-parseInt(inp)];
                    }
                }
                //console.log(dataExtras);
                
                var dataFirst = {
                    label: ""+company[i],
                    data: dataExtras,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
                if(k==colors.length){
                    k=0;
                }
                else{
                    k=k+1;
                }
                datasets.push(dataFirst);
                datas=[];
            }
            else{
                datas[lab.indexOf(companydate[i])]=companyprice[i];
            }
        }

        if(company[company.length] == company[company.length-1]){
            datas[companydate[company.length]]=companyprice[company.length];
            if(k==colors.length){
                    k=0;
                }
                else{
                    k=k+1;
                }
                var inp=input-1;
                var sum=0;
                var dataExtras=[];
                for(var p=0;p<datas.length;p=p+1){
                    sum=sum+datas[parseInt(p)];
                    if(p>=inp){
                        dataExtras[parseInt(p)]=sum/input;
                        sum=sum-datas[parseInt(p)-parseInt(inp)];
                    }
                }
                //console.log(dataExtras);
                
                var dataFirst = {
                    label: ""+company[company.length],
                    data: dataExtras,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
                datasets.push(dataFirst);
                datas=[];
        }
       
        else{
            
        }

        //console.log(datasets);

        var realDate=[];
        for(i=1;i<lab.length;i++){
            var inter=new Date(lab);
            var internext=inter.toDateString();
            internext=internext.split("G");
            realDate[i]=internext;
        }
    
        var myLineChart = new Chart(ctxm, {
            type: 'line',
            data: 
            { 
                    labels: lab, 
                    datasets: datasets
            }, 
        });

    }

    function combined(price){
        $("#myCharts").show();
        $("#hr1").show();
        alert("Done");
        var g1=parseInt(document.getElementById("g1").value);
        var g2=parseInt(document.getElementById("g2").value);
        var g3=parseInt(document.getElementById("g3").value);
        var g4=parseInt(document.getElementById("g4").value);
        var cinput=document.getElementById("company").value;
        cinput=cinput.toUpperCase();
        var ctxs = document.getElementById("myCharts"); 
        var i=1;
        var lab=[];
        var datas=[];
        var company=[];
        var companydate=[];
        var companyprice=[];
        price.forEach(function(item){
            if(!cinput.localeCompare(item.company)){
                company[i]=item.company;
                companydate[i]=item.date;
                companyprice[i]=item.price;
                i=i+1;
            }
        });
        //console.log(companydate[1]);
        var k=0;
        var colors=["red","blue","green","purple","black","brown","orange","#ff002b","#000066","#003300","#003366"];

        i=1;
        var sum=0;
        var datas=[];
        var dataset=[];
        for(i=1;i<company.length;i++){
            sum=sum+companyprice[i];
            if(i>=g1){
                datas[i]=sum/(parseInt(g1));
                sum=sum-companyprice[i-g1+1];
            }
        }

        var dataFirst = {
                    label: "Group of "+cinput+" by "+g1,
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
        k++;
        dataset.push(dataFirst);

        i=1;
        sum=0;
        datas=[];
        for(i=1;i<company.length;i++){
            sum=sum+companyprice[i];
            if(i>=g2){
                datas[i]=sum/(parseInt(g2));
                sum=sum-companyprice[i-g2+1];
            }
        }


        var dataFirst = {
                    label: "Group of "+cinput+" by "+g2,
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
        k++;
        dataset.push(dataFirst);

        
        i=1;
        sum=0;
        datas=[];
        for(i=1;i<company.length;i++){
            sum=sum+companyprice[i];
            if(i>=g3){
                datas[i]=sum/(parseInt(g3));
                sum=sum-companyprice[i-g3+1];
            }
        }


        var dataFirst = {
                    label: "Group of "+cinput+" by "+g3,
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
        k++;
        dataset.push(dataFirst);

        
        i=1;
        sum=0;
        datas=[];
        for(i=1;i<company.length;i++){
            sum=sum+companyprice[i];
            if(i>=g4){
                datas[i]=sum/(parseInt(g4));
                sum=sum-companyprice[i-g4+1];
            }
        }


        var dataFirst = {
                    label: "Group of "+cinput+" by "+g4,
                    data: datas,
                    lineTension: 0,
                    fill: false,
                    borderColor: colors[k]
                };
        k++;
        dataset.push(dataFirst);

        var realDate=[];
        for(i=1;i<companydate.length;i++){
            var inter=new Date(companydate[i]);
            var internext=inter.toDateString();
            internext=internext.split("G");
            realDate[i]=internext;
        }

        var myLineChart = new Chart(ctxs, {
            type: 'line',
            data: 
            { 
                    labels: realDate, 
                    datasets: dataset
            }, 
        });
        
        
    }

    const search=()=>{
        let filter=document.getElementById('search').value.toUpperCase();
        let searching=document.getElementById('searching');
        let tr=searching.getElementsByTagName('tr');
        
        for(var i=0;i<tr.length;i++){
            let td=tr[i].getElementsByTagName('td')[0];
            let td2=tr[i].getElementsByTagName('td')[2];
            if(td){
                let textValue=td.textContent || td.innerHTML;
                let textValue2=td2.textContent || td2.innerHTML;
                if(textValue.toUpperCase().indexOf(filter) > -1 || textValue2.toUpperCase().indexOf(filter) > -1){
                   tr[i].style.display="";
                }
                else{
                    tr[i].style.display="None";
                }
            }
        }
    }
    

    </script> 
          
    </body> 
</html>